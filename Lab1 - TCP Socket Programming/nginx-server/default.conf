
log_format log_req_resp '{"time": $msec, "remote": "$remote_addr:$remote_port", "request_line": "$request", "status": $status,  "response_hash":"$resp_body_hash"}';

server {
	access_log /var/log/nginx/access.log log_req_resp;
	lua_need_request_body on;
	set $resp_body "";
	set $resp_body_hash "";
	body_filter_by_lua '
		local resp_body = string.sub(ngx.arg[1], 1, 1000)
		ngx.ctx.buffered = (ngx.ctx.buffered or "") .. resp_body
		if ngx.arg[2] then
			ngx.var.resp_body = ngx.ctx.buffered
		end
		local resty_md5 = require "resty.md5"
		local md5 = resty_md5:new()
		md5:update(resp_body)
		local digest = md5:final()
		local str = require "resty.string"
		ngx.var.resp_body_hash = str.to_hex(digest)
	';
	location / {
		index microscape.html;
	}
}